@model CinephilesChoice.Models.NominationViewModel

@{
    ViewData["Title"] = @Model.Nominations.First().Year + " - " + @Model.Nominations.First().AwardCategory;
    Layout = "~/Views/Shared/_Layout_Cinephile.cshtml";
}

<h1>@Model.Nominations.First().Year - @Model.Nominations.First().AwardCategory</h1>
<a asp-action="VoteOnNomination" asp-route-year="@Model.Nominations.First().Year" asp-route-category="@Model.Nominations.First().AwardCategory">Vote</a>

@*<canvas id="voting-stats" width="500" height="300"></canvas>*@

<div id="chart"></div>

<div class="row">
    @foreach (Nomination nomination in Model.Nominations)
    {
        <div class="col-md-4 movie-poster-container">
            @if (nomination.IsWinner)
            {
                <img class="movie-poster oscar-winner" src="@nomination.Movie.Poster" alt="@nomination.Movie.Title" />
            }
            else
            {
                <img class="movie-poster" src="@nomination.Movie.Poster" alt="@nomination.Movie.Title" />
            }

            <div class="movie-poster-overlay">
                <div>
                    <h5>Nominee: @nomination.Nominee</h5>
                    <h6>Title: @nomination.Movie.Title</h6>
                    <h6>Directed by: @nomination.Movie.Director</h6>
                    <h6>Starring: @nomination.Movie.Actors</h6>
                </div>
            </div>
        </div>
    }
</div>

    <!--Load the AJAX API-->
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawChart() {

            // Create the data table.
            let nominees = '@Model.JsonNomineeNames';
            nominees = JSON.parse(nominees.replace(/&quot;/g, "\"").replace(/""/g, "\""));
            let votes = '@Model.JsonVotes';
            votes = JSON.parse(votes.replace(/&quot;/g, "\"").replace(/""/g, "\"").replace(/"{/g, "{").replace(/}"/g, "}"));
            console.log(votes);
            let groupedVotes = groupVotesByNominee(votes, nominees);
            groupedVotes = Object.values(groupedVotes).map(function (ele, i) {
                return [Object.keys(groupedVotes)[i], ele.length]
            });
            var data = new google.visualization.DataTable();
            //let rowsToAdd = [];
            //for (let i = 0; i < groupedVotes; i++) {
            //    rows.push([groupedVotes[i].key, )
            //}
            data.addColumn('string', 'Nominees');
            data.addColumn('number', 'NumberOfVotes');
            data.addRows(groupedVotes);

            // Set chart options
            var options = {
                'title': 'How Much Pizza I Ate Last Night',
                'width': 600,
                'height': 400
            };

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.PieChart(document.getElementById('chart'));
            chart.draw(data, options);
        }
        function groupVotesByNominee(votesArray, nominees) {
            let groupedArray = {};
            for (let i = 0; i < nominees.length; i++) {
                groupedArray[nominees[i]] = [];
            }
            for (let i = 0; i < votesArray.length; i++) {
                groupedArray[votesArray[i]["Nominee"]].push(votesArray[i]);
            }
            return groupedArray;
        }
    </script>

    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.bundle.min.js"></script>
        <script src="~/js/statistics.js"></script>
        <script>displayChartData(@Html.Raw(Model.JsonVotes.Replace(@"\\\", @" \").Replace("\"{", "{").Replace("}\"", "}").Replace(@"\", @"")), @Html.Raw(Model.JsonNomineeNames.Replace("\\\"", "").Replace(@"\", "")));</script>*@
